package com.example.smartcarrier

import android.bluetooth.BluetoothAdapter
import android.bluetooth.BluetoothDevice
import android.bluetooth.BluetoothManager
import android.content.Context
import android.content.Intent
import android.content.pm.PackageManager
import android.os.Bundle
import android.widget.ArrayAdapter
import android.widget.ListView
import android.widget.Toast
import androidx.core.app.ActivityCompat
import androidx.core.content.ContextCompat
import androidx.activity.result.ActivityResultLauncher
import androidx.activity.result.contract.ActivityResultContracts
import androidx.appcompat.app.AppCompatActivity

private fun showMessage(context: Context, message: String){
    Toast.makeText(context, message, Toast.LENGTH_SHORT).show()
}



    class BluetoothActiivty : AppCompatActivity() {
        private val bluetoothManager: BluetoothManager by lazy {
            getSystemService(BluetoothManager::class.java)
        }
        private val bluetoothAdapter: BluetoothAdapter? by lazy {
            bluetoothManager.adapter
        }
        private val activityResultLauncher: ActivityResultLauncher<Intent> =
            registerForActivityResult(ActivityResultContracts.StartActivityForResult()) {
                if (it.resultCode == RESULT_OK) {
                    showMessage(this, "블루투스 활성화")
                } else if (it.resultCode == RESULT_CANCELED) {
                    showMessage(this, "취소")
                }
            }

        override fun onCreate(savedInstanceState: Bundle?) {
            super.onCreate(savedInstanceState)
            // BluetoothAdapter가 Null이라면 블루투스를 지원하지 않는 것이므로 종료
            if (bluetoothAdapter == null) {
                showMessage(this, "블루투스를 지원하지 않는 장비입니다.")
                finish()
            }


            // 활성화 요청
            fun setActivate() {
                bluetoothAdapter?.let {
                    // 비활성화 상태라면
                    if (!it.isEnabled) {
                        // 활성화 요청
                        val intent = Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE)
                        activityResultLauncher.launch(intent)
                    } else { // 활성 상태라면
                        showMessage(this, "이미 활성화 되어 있습니다")
                    }
                }
            }

            // 비활성화 요청
            fun setDeActivate() {
                bluetoothAdapter?.let {
                    // 비활성화 상태라면
                    if (!it.isEnabled) {
                        showMessage(this, "이미 비활성화 되어 있습니다")
                        // 활성 상태라면
                    } else {
                        // 블루투스 비활성화
                        it.disable()
                        showMessage(this, "블루투스를 비활성화 하였습니다")
                    }

                }
            }
        }

        class BluetoothHandler(private val context: Context, private val listView: ListView) {
            private val bluetoothAdapter: BluetoothAdapter? = BluetoothAdapter.getDefaultAdapter()
            private val adapter: ArrayAdapter<Pair<String, String>> =
                ArrayAdapter(context, R.layout.activity_bluetooth, R.id.listViewPairedDevices, ArrayList())

            init {
                listView.adapter = adapter
            }


            // 페어링된 디바이스 검색
            fun getPairedDevices() {
                bluetoothAdapter?.let {
                    // 블루투스 활성화 상태라면
                    if (it.isEnabled) {
                        // ArrayAdapter clear
                        adapter.clear()
                        // 페어링된 기기 확인
                        val pairedDevices: Set<BluetoothDevice> = it.bondedDevices
                        // 페어링된 기기가 존재하는 경우
                        if (pairedDevices.isNotEmpty()) {
                            pairedDevices.forEach { device ->
                                // ArrayAdapter에 아이템 추가
                                adapter.add(Pair(device.name, device.address))
                            }
                        } else {
                            showMessage(this, "페어링된 기기가 없습니다.")
                        }
                    } else {
                        showMessage(this, "블루투스가 비활성화 되어 있습니다.")
                    }
                }
            }
        }
    }


